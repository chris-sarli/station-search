{"version":3,"sources":["ServiceLine.js","Entry.js","ResList.js","SearchTool.js","App.js","serviceWorker.js","index.js"],"names":["ServiceLine","color","this","props","line","styles","style","React","Component","Entry","zone","item","img","lines","map","l","key","zones","length","a_url","url","connshow","c","connections","includes","href","target","rel","className","name","date","usages","src","alt","ResList","alph_asc","a","b","filt","sortby","parseFloat","Date","parse","show","init","filter","i","toLowerCase","search","crit","q","replace","val","r","ret","sort","display","e","Fragment","SearchTool","state","adv","Object","values","data","items","form","filterList","bind","toggleAdv","clear","setLines","f","setState","value","ne","push","setZones","input","cn","zoneShow","type","placeholder","onChange","onClick","lbView","toggleLine","toggleZone","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ffbe323.chunk.js","sourcesContent":["import React from 'react';\n\nclass ServiceLine extends React.Component {\n\trender() {\n\t\t\n\t\tlet color;\n\t\tswitch (this.props.line) {\n\t\t\tcase \"Bakerloo\":\n\t\t\t\tcolor = \"rgb(178, 99, 0)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Central\":\n\t\t\t\tcolor = \"rgb(220, 36, 31)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Circle\":\n\t\t\t\tcolor = \"rgb(255, 211, 41)\";\n\t\t\t\tbreak;\n\t\t\tcase \"District\":\n\t\t\t\tcolor = \"rgb(0, 125, 50)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Hammersmith & City\":\n\t\t\t\tcolor = \"rgb(244, 169, 190)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Jubilee\":\n\t\t\t\tcolor = \"rgb(161, 165, 167)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Metropolitan\":\n\t\t\t\tcolor = \"rgb(155, 0, 88)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Northern\":\n\t\t\t\tcolor = \"rgb(0, 0, 0)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Piccadilly\":\n\t\t\t\tcolor = \"rgb(0, 25, 168)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Victoria\":\n\t\t\t\tcolor = \"rgb(0, 152, 216)\";\n\t\t\t\tbreak;\n\t\t\tcase \"Waterloo & City\":\n\t\t\t\tcolor = \"rgb(147, 206, 186)\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcolor = \"rgb(255, 255, 255)\";\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tlet styles = {\n\t\t\t\"width\": \"100%\",\n\t\t\t\"borderLeft\": \"6px solid \" + color,\n\t\t\t\"marginTop\": \"10px\",\n\t\t\t\"marginBottom\": \"10px\",\n\t\t\t\"paddingLeft\": \"5px\",\n\t\t\t\"paddingTop\": \"3px\"\n\t\t}\n\t\t\n\t\treturn <div style={styles}>{this.props.line} line</div>\n\t}\n}\n\nexport default ServiceLine;","import React from 'react';\n\nimport ServiceLine from './ServiceLine.js';\n\nclass Entry extends React.Component {\n\n\trender() {\n\t\t\t\t\n\t\t// Styles for image background of div\n\t\tlet styles = {\n\t\t\t\"backgroundImage\": 'url(' + this.props.item.img + ')',\n\t\t\t\"backgroundSize\": \"cover\"\n\t\t}\n\t\t\n\t\t// Create lines list\n\t\tlet lines = this.props.item.lines.map(l => <ServiceLine line={l} key={l} />);\n\t\t\n\t\tlet zone;\n\t\t\n\t\t// Zone text subheader\n\t\tif (this.props.item.zones.length === 1) {\n\t\t\tzone = \"Zone \" + this.props.item.zones[0]\n\t\t} else {\n\t\t\tzone = \"Zones \" + this.props.item.zones[0] + \" & \" + this.props.item.zones[1]\n\t\t}\n\t\t\n\t\t// Wikipedia page to open in new tab\n\t\tconst a_url = \"https://en.wikipedia.org/\" + this.props.item.url;\n\t\t\n\t\t// Determines if there are any connections to show\n\t\tconst anyConns = () => {\n\t\t\tif (this.props.item.connections.length > 0) {\n\t\t\t\treturn \"divider dividerConn\";\n\t\t\t}\n\t\t\treturn \"notconn\";\n\t\t}\n\t\t\n\t\t// Determines whether a connection should be shown\n\t\tconst connshow = (c) => {\n\t\t\tif (this.props.item.connections.includes(c)) {\n\t\t\t\treturn \"connections\"\n\t\t\t}\n\t\t\treturn \"connections notconn\"\n\t\t}\n\t\t\n\t\treturn (\n\t\t<a href={a_url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t<div className=\"item\">\n\t\t\t\t<div className=\"img_sect\" style={styles}></div>\n\t\t\t\t<div className=\"station_content\">\n\t\t\t\t\t<div className=\"station_name\">{this.props.item.name}</div>\n\t\t\t\t\t<div className=\"stat\"><strong>Opened:</strong> {this.props.item.date}</div>\n\t\t\t\t\t<div className=\"stat\"><strong>Ridership:</strong> {this.props.item.usages} million</div>\n\t\t\t\t\t<div className=\"divider\"><strong>Tube</strong> {zone}</div>\n\t\t\t\t\t<div>{lines}</div>\n\t\t\t\t\t<div className={anyConns()}><strong>Connections</strong></div>\n\t\t\t\t\t\t<div className={connshow('eliz')}>\n\t\t\t\t\t\t\t<img src=\"icons/eliz.png\" alt=\"Elizabeth Line Roundel\" />\n\t\t\t\t\t\t\tElizabeth Line\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={connshow('overground')}>\n\t\t\t\t\t\t\t<img src=\"icons/overground.png\" alt=\"Overground Roundel\" />\n\t\t\t\t\t\t\tOverground\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={connshow('tram')}>\n\t\t\t\t\t\t\t<img src=\"icons/trams.png\" alt=\"Tram Roundel\" />\n\t\t\t\t\t\t\tTramlink\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={connshow('dlr')}>\n\t\t\t\t\t\t\t<img src=\"icons/dlr.png\" alt=\"DLR Roundel\" />\n\t\t\t\t\t\t\tDLR\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={connshow(\"nr\")}>\n\t\t\t\t\t\t\t<img src=\"icons/nr.png\" alt=\"National Rail Logo\" />\n\t\t\t\t\t\t\tNational Rail\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nexport default Entry;","import React from 'react';\n\nimport Entry from './Entry.js';\n\nclass ResList extends React.Component {\n\t\n\trender() {\n\t\t\n\t\tlet alph_asc = (a, b) => {\n\t\t\treturn b.name < a.name;\n\t\t}\n\t\t\n\t\tlet alph_desc = (a, b) => {\n\t\t\treturn b.name > a.name;\n\t\t}\n\t\t\n\t\tlet usage_asc = (a, b) => {\n\t\t\treturn parseFloat(b.usages) < parseFloat(a.usages);\n\t\t}\n\t\t\n\t\tlet usage_desc = (a, b) => {\n\t\t\treturn parseFloat(b.usages) > parseFloat(a.usages);\n\t\t}\n\t\t\n\t\tlet age_asc = (a, b) => {\n\t\t\treturn Date.parse(b.date) < Date.parse(a.date);\n\t\t}\n\t\t\n\t\tlet age_desc = (a, b) => {\n\t\t\treturn Date.parse(b.date) > Date.parse(a.date);\n\t\t}\n\t\n\t\tlet filt = alph_asc;\n\t\t\n\t\t// Set sorting function\n\t\tswitch (this.props.sortby) {\n\t\t\tcase \"alph\":\n\t\t\t\tfilt = alph_asc;\n\t\t\t\tbreak;\n\t\t\tcase \"alph_r\":\n\t\t\t\tfilt = alph_desc;\n\t\t\t\tbreak;\n\t\t\tcase \"ridership_lo\":\n\t\t\t\tfilt = usage_asc;\n\t\t\t\tbreak;\n\t\t\tcase \"ridership_hi\":\n\t\t\t\tfilt = usage_desc;\n\t\t\t\tbreak;\n\t\t\tcase \"age_lo\":\n\t\t\t\tfilt = age_asc;\n\t\t\t\tbreak;\n\t\t\tcase \"age_hi\":\n\t\t\t\tfilt = age_desc;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfilt = alph_asc;\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\t// Create teh filtered list\n\t\tlet show = \n\t\t\tthis.props.init\n\t\t\t.filter(i => \n\t\t\t\ti.name.toLowerCase()\n\t\t\t\t.search((\"\" + this.props.crit.q\n\t\t\t\t\t.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'))\n\t\t\t\t\t.toLowerCase()) !== -1)\n\t\t\t.filter(i => i.lines.filter(val => this.props.lines\n\t\t\t\t.includes(val)).length > 0)\n\t\t\t.filter(i => \n\t\t\t\ti.zones.filter(val => this.props.zones.map(r => \"\" + r)\n\t\t\t\t\t.includes(val)).length > 0)\n\t\t\t.map(i => i.name);\n\t\t\n\t\t// Determine wether a given station item should be shown\n\t\tconst shouldShow = (e) => {\n\t\t\treturn show.includes(e.name);\n\t\t}\n\t\t\n\t\t// Create the entries\n\t\tlet ret = this.props.init.sort(alph_asc).sort(filt)\n\t\t\t.map(i => \n\t\t\t\t(<div\n\t\t\t\t\tkey={i.name}\n\t\t\t\t\tstyle={{display: shouldShow(i) ? 'block' : 'none'}}>\n\t\t\t\t<Entry item={i} /></div>));\n\t\t\t\n\t\treturn (<React.Fragment>\n\t\t\t<div className=\"count\">\n\t\t\t\t{show.length} result{(show.length === 1) ? \"\" : \"s\"}\n\t\t\t</div>\n\t\t\t<div className=\"stations\">{ret}</div></React.Fragment>);\n\t}\n}\n\nexport default ResList;","import React from 'react';\n\nimport ResList from './ResList.js';\n\nclass SearchTool extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tadv: false,\n\t\t\tzones: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n\t\t\tlines: [\n\t\t\t\t'Bakerloo',\n\t\t\t\t'Central',\n\t\t\t\t'Circle',\n\t\t\t\t'District',\n\t\t\t\t'Hammersmith & City',\n\t\t\t\t'Jubilee',\n\t\t\t\t'Metropolitan',\n\t\t\t\t'Northern',\n\t\t\t\t'Piccadilly',\n\t\t\t\t'Victoria',\n\t\t\t\t'Waterloo & City'\n\t\t\t],\n\t\t\tsortby: 'alph',\n\t\t\tcrit: {\n\t\t\t\tq: \"\",\n\t\t\t\tzones: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\t\t\t},\n\t\t\tinit: Object.values(this.props.data),\n\t\t\titems: [],\n\t\t\tform: { }\n\t\t}\n\t\tthis.state.items = this.state.init;\n\t\tthis.filterList = this.filterList.bind(this);\n\t\tthis.toggleAdv = this.toggleAdv.bind(this);\n\t\tthis.clear = this.clear.bind(this);\n\t\tthis.setLines = this.setLines.bind(this);\n\t}\n\t\n\tsetLines(f) {\n\t\tif (f === \"none\") {\n\t\t\tthis.setState({lines: []})\n\t\t} else if (f === \"all\") {\n\t\t\tthis.setState({lines: [\n\t\t\t\t'Bakerloo',\n\t\t\t\t'Central',\n\t\t\t\t'Circle',\n\t\t\t\t'District',\n\t\t\t\t'Hammersmith & City',\n\t\t\t\t'Jubilee',\n\t\t\t\t'Metropolitan',\n\t\t\t\t'Northern',\n\t\t\t\t'Piccadilly',\n\t\t\t\t'Victoria',\n\t\t\t\t'Waterloo & City'\n\t\t\t]});\n\t\t}\n\t}\n\n\tsetZones(f) {\n\t\tif (f === \"none\") {\n\t\t\tthis.setState({zones: []})\n\t\t} else if (f === \"all\") {\n\t\t\tthis.setState({zones: [1, 2, 3, 4, 5, 6, 7, 8, 9]});\n\t\t}\n\t}\n\t\n\t// Change the filter by updated the query to match the inputted text\n\tfilterList(e) {\n\t\tif (e === -1) {\n\t\t\tthis.setState({items: this.state.init});\n\t\t}\n\t\telse {\n\t\t\tthis.setState({ crit: {q: e.target.value}});\n\t\t}\n\t}\n\t\n\t// Change the filter by turning a zone on or off\n\ttoggleZone(e) {\n\t\tlet ne;\n\t\tif (this.state.zones.includes(e)) {\n\t\t\tne = this.state.zones.filter(i => i !== e);\n\t\t} else {\n\t\t\tne = this.state.zones;\n\t\t\tne.push(e);\n\t\t\tthis.setState({'zones': ne});\n\t\t}\n\t\tthis.setState({'zones': ne});\n\t}\n\t\n\t// Change the filter by turning a line on or off\n\ttoggleLine(e) {\n\t\tlet ne;\n\t\tif (this.state.lines.includes(e)) {\n\t\t\tne = this.state.lines.filter(i => i !== e);\n\t\t\t\n\t\t} else {\n\t\t\tne = this.state.lines;\n\t\t\tne.push(e);\n\t\t\tthis.setState({'lines': ne});\n\t\t}\n\t\tthis.setState({'lines': ne});\n\t}\n\t\n\t// Toggle the advanced search panel\n\ttoggleAdv() {\n\t\tthis.setState({adv: !this.state.adv});\n\t\tif (this.state.adv) {\n\t\t\tthis.setLines('all');\n\t\t\tthis.setZones('all');\n\t\t}\n\t}\n\t\n\t/* Determine classes for given lineselector\n\t * input - key\n\t * cn - className corresponding to line\n\t */\n\tlbView(input, cn) {\n\t\tif (this.state.lines.includes(input)) {\n\t\t\t\treturn \"linebullet \" + cn;\n\t\t}\n\t\telse {\n\t\t\treturn \"linebullet inactive\";\n\t\t}\n\t}\n\t\n\t// Clear the filter/sort\n\tclear() {\n\t\t\tthis.setZones('all');\n\t\t\tthis.setLines('all');\n\t\t\tthis.setState({crit: {\n\t\t\t\tq: \"\"\n\t\t\t}});\n\t\t\tthis.setState({sortby: 'alph'});\n\t}\n\t\n\trender() {\n\t\t\n\t\tconst zoneShow = (e) => {\n\t\t\treturn !this.state.zones.includes(e) ? \"nozonesel zonesel\" : \"zonesel\";\n\t\t}\n\n\t\treturn (\n\t\t<div className=\"ilcont\">\n\t\t\t<div className=\"scont\">\n\t\t\t\t<div className={this.state.adv ? 'searcher adv' : 'searcher'}>\n\t\t\t\t\t<input type=\"text\" name=\"field\" placeholder=\"Station name...\" value={this.state.crit.q} onChange={this.filterList}></input>\n\t\t\t\t\t<div className=\"split\">\n\t\t\t\t\t\t<div className=\"subsplit linefilter\">\n\t\t\t\t\t\t\t<div className=\"title\"><span>Filter by line</span>\n\t\t\t\t\t\t\t\t<div className=\"filterControls\">\n\t\t\t\t\t\t\t\t\t<div onClick={() => this.setLines('none')}>Select None</div>\n\t\t\t\t\t\t\t\t\t<div onClick={() => this.setLines('all')}>Select All</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"linechecks\">\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Bakerloo\", \"bakerloo\")} onClick={() => this.toggleLine(\"Bakerloo\")}>Bakerloo</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Central\", \"central\")} onClick={() => this.toggleLine(\"Central\")}>Central</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Circle\", \"circle\")} onClick={() => this.toggleLine(\"Circle\")}>Circle</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"District\", \"district\")} onClick={() => this.toggleLine(\"District\")}>District</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Hammersmith & City\", \"hc\")} onClick={() => this.toggleLine(\"Hammersmith & City\")}>Hammersmith & City</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Jubilee\", \"jubilee\")} onClick={() => this.toggleLine(\"Jubilee\")}>Jubilee</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Metropolitan\", \"metropolitan\")} onClick={() => this.toggleLine(\"Metropolitan\")}>Metropolitan</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Northern\", \"northern\")} onClick={() => this.toggleLine(\"Northern\")}>Northern</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Piccadilly\", \"piccadilly\")} onClick={() => this.toggleLine(\"Piccadilly\")}>Piccadilly</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Victoria\", \"victoria\")} onClick={() => this.toggleLine(\"Victoria\")}>Victoria</div>\n\t\t\t\t\t\t\t\t<div className={this.lbView(\"Waterloo & City\", \"wc\")} onClick={() => this.toggleLine(\"Waterloo & City\")}>Waterloo & City</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"subsplit linefilter zf\">\n\t\t\t\t\t\t\t<div className=\"title\"><span>Filter by zone</span>\n\t\t\t\t\t\t\t<div className=\"filterControls\">\n\t\t\t\t\t\t\t\t<div onClick={() => this.setZones('none')}>Select None</div>\n\t\t\t\t\t\t\t\t<div onClick={() => this.setZones('all')}>Select All</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"zonessel\">\n\t\t\t\t\t\t\t\t<div className={zoneShow(1)} onClick={() => this.toggleZone(1)}><span>1</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(2)} onClick={() => this.toggleZone(2)}><span>2</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(3)} onClick={() => this.toggleZone(3)}><span>3</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(4)} onClick={() => this.toggleZone(4)}><span>4</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(5)} onClick={() => this.toggleZone(5)}><span>5</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(6)} onClick={() => this.toggleZone(6)}><span>6</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(7)} onClick={() => this.toggleZone(7)}><span>7</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(8)} onClick={() => this.toggleZone(8)}><span>8</span></div>\n\t\t\t\t\t\t\t\t<div className={zoneShow(9)} onClick={() => this.toggleZone(9)}><span>9</span></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"subsplit sortby\">\n\t\t\t\t\t\t\t<div className=\"sel\">Sort by: \n\t\t\t\t\t\t\t\t<div className=\"select\">\n\t\t\t\t\t\t\t\t\t<select value={this.state.sortby} onChange={(e) => this.setState({sortby: e.target.value})}>\n\t\t\t\t\t\t\t\t\t\t<option value=\"alph\">Alphabetical</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"alph_r\">Reverse Alphabetical</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"ridership_lo\">Ridership (Lowest first)</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"ridership_hi\">Ridership (Highest first)</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"age_lo\">Station Age (Oldest first)</option>\n\t\t\t\t\t\t\t\t\t\t<option value=\"age_hi\">Station Age (Youngest first)</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"belowopts\">\n\t\t\t\t\t<div className=\"clear\" onClick={this.clear}>Clear Search</div>\n\t\t\t\t\t<div className=\"advanced\" onClick={this.toggleAdv}>{this.state.adv ? \"Simple\" : \"Advanced\"} Search...</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t<ResList init={this.state.init} crit={this.state.crit} zones={this.state.zones} lines={this.state.lines} sortby={this.state.sortby}/>\n\t\t</div>);\n\t}\n}\n\nexport default SearchTool;","import React from 'react';\nimport './App.css';\n\nimport SearchTool from './SearchTool.js';\n\nimport data from './data.json';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\"><img src=\"glass.png\" alt=\"LU Roundel\" /><div>Station Search</div></div>\n      <SearchTool data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}